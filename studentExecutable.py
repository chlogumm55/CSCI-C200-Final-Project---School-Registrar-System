"""
Filename: studentExecutable.py

Problem Description: This design demonstrates the algorithm for the Student Module of the course project. A student can login to the system and will be able to see a list of courses they can enroll in, as well as view their enrolled courses. The csv file generated in the Admin module will be used to authenticate a user. The csv file contains 5 columns, with the username stored in the third column and password stored in the fourth column. Users will be allowed to enter the wrong username and password 5 times. Courses are stored in the csv file generated by the Admin module. The csv file contains course numbers, course titles, and instructor usernames. The courses the students enroll in, will be generated into a csv file, named enrollments.

First Create Date: April 23rd, 2025
Last Update Date: May 2nd, 2025
Author: Chloie Gummer
Version: 1.1
"""
from studentsClass import Student; #Imports student class
import utility; #Imports utility file
import sys; #Imports sys module for exiting the program
import csv; #Imports the csv module

print("Welcome to the Student Module!"); #Display welcome message

# Initialize a list to store multiple students
students = [];

# Load existing students from the CSV file
try:
    with open("students.csv", "r") as file:
        reader = csv.reader(file); #Read csv file
        next(reader);  # Skip the header row
        for row in reader:
            students.append(Student(row[0], row[1], row[2], row[3]));  # Create Student objects and store them in the list
except FileNotFoundError: #File processing error
    print("No students found. Starting fresh.");

#Prompt user for credentials
username = input("Enter your username: ");
password = input("Enter your password: ");

#Temporary student object for authentication purposes
studentOne = Student("Chloie", "Gummer", username, password);

#Authentication process with a maxiumum of five attempts
attempts = 5;
while attempts > 0:
    authenticatedStudent = next((student for student in students if student.username == username and student.password == password), None); #When username and password match, student is authenticated

    if authenticatedStudent:
        print("Login Successful!");
        break;  # Successfully authenticated
    else:
        attempts = attempts - 1; #Decrement attempts
        if attempts == 0: #Max attempts allowed
            print("Too many failed attempts. Exiting program.");
            sys.exit(); #Exit program if authentication fails
        print("Invalid credentials. " + str(attempts) + " attempts remaining.");
        username = input("Enter your username: ");
        password = input("Enter your password: ");
    

#Display student menu options
while True:
    print("Student Menu: ");
    print("1. Enroll in a Course \n");
    print("2. View Enrolled Courses \n");
    print("3. Exit \n");

    choice = input("Enter your choice (1-3): ");

    #Handle user choices for menu actions
    if choice == "1": #Option one is for enrolling in courses
        authenticatedStudent.enrollCourses();

    elif choice == "2": #Option two is viewing enrolled courses
        authenticatedStudent.viewEnrolledCourses();

    elif choice == "3": #Option three exits the module
        print("Exiting the student module.");
        sys.exit(); #EXiting the program

    else: #Invalid option selected
        print("Invalid choice. Please enter a number between 1-3.");
