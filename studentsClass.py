"""
Filename: studentsClass.py

Problem Description: This program demonstrates the algorithm for the Student Module of the course project. A student can login to the system and will be able to see a list of courses they can enroll in, as well as view their enrolled courses. The csv file generated in the Admin module will be used to authenticate a user. The csv file contains 5 columns, with the username stored in the third column and password stored in the fourth column. Users will be allowed to enter the wrong username and password 5 times. Courses are stored in the csv file generated by the Admin module. The csv file contains course numbers, course titles, and instructor usernames. The courses the students enroll in, will be generated into a csv file, named enrollments.

First Create Date: April 22nd, 2025
Last Update Date: April 23rd, 2025
Author: Chloie Gummer
Version: 1.1
"""
import utility; #Importing utility file
import csv; #Importing csv module
import os; #Importing os module for file processing
from userClass import User; #Importing the User class as the parent class

class Student (User): #The student class is the child of the User class
    
    #Constructor to initialize the student object using the parent class
    def __init__(self, firstName, lastName, username, password):
        super().__init__(firstName, lastName, username, password);

    def __str__(self):
        return {
            #String representation of a student object
            "Student: \n"
            "First Name - " + self.firstName + "\n"
            "Last Name - " + self.lastName + "\n"
            "Username - " + self.username + "\n"
            "Password - " + self.password + "\n"
        };

    #Action Methods

    #Allows a student to enroll in a course by selecting from available courses in courses.csv
    def enrollCourses(self):
        courses = []; #Empty list to store courses

        fileExists = os.path.exists("courses.csv"); #File path existence

        if not fileExists:
            #If the csv does not exists, display a message
            print("Courses must be added before enrollment.");
            return;

        try:
            #Read available courses from the csv file
            with open("courses.csv", "r", newline="") as file:
                reader = csv.reader(file);
                headers = next(reader); #Get the headers
                courses = [row for row in reader]; #Store all course data

                if not courses: #If no courses are in the list
                    print("No courses available for enrollment.");
                    return;

                #Display all available courses
                print("Available Courses: \n ");
                print(" | ".join(headers));
                for course in courses: #Loop through and print all the course information
                    print(" | ".join(course));
        
            #Prompt student to select a course
            courseNumberSelected = input("Enter the course number you want to enroll in: ");

            #Validate course selection
            if not any(course[0] == courseNumberSelected for course in courses): #If course selected does not match
                print("Invalid Course Number.");
                return;

            #Saving enrollment information
            fileExistsTwo = os.path.exists("enrollments.csv");

            if not fileExistsTwo: #The enrollment csv file
                with open("enrollments.csv", 'w', newline="") as file:
                    writer = csv.writer(file);
                    writer.writerow(["Username", "Course Number"]); #Write headers if file is newly created

            #Apped the enrollment record to the csv file
            with open("enrollments.csv", mode="a", newline="") as file:
                writer = csv.writer(file);
                writer.writerow([self.username, courseNumberSelected]);
            
            print("Enrollment Successful!"); #Enrollment added

        except FileNotFoundError: #File processing error
            print("Error: Unable to access courses.csv");

    #Display the courses the student is enrolled in by checking enrollments.csv
    def viewEnrolledCourses(self):
        enrolledCourses = []; #Empty list to store enrolled courses
        allCourses = []; #Empty list to store all courses

        fileExists = os.path.exists("enrollments.csv"); #Check if the enrollments file exists

        if not fileExists: #File must be created first
            print("You must first enroll in courses.");
            return;

        try:
            #Read enrolled courses from enrollments.csv file
            with open("enrollments.csv", "r", newline="") as file:
                reader = csv.reader(file);
                next(reader); #Skip header row
                enrolledCourses = [row[1] for row in reader if row [0] == self.username]; #Get courses for current student

            if not enrolledCourses:
                print("No courses enrolled yet.");
                return;
    
            #Read all available courses from courses.csv
            with open("courses.csv", "r", newline="") as file:
                reader = csv.reader(file);
                headers = next(reader); #Get headers
                allCourses = {row[0]: row for row in reader}; #Map course numbers to course details

            #Display the enrolled courses
            print("Courses Enrolled in by " + self.username);
            print(" | ".join(headers));
            for courseNum in enrolledCourses: #Loop through and print the enrolled course data
                print(" | ".join(allCourses.get(courseNum)));

        except FileNotFoundError: #File processing error
            print("Unable to access enrollments.csv");